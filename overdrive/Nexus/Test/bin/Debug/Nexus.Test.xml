<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nexus.Test</name>
    </assembly>
    <members>
        <member name="T:Nexus.Core.Commands.ListAll">
            <summary>
            Return a list as the outcome.
            </summary>
            
        </member>
        <member name="F:Nexus.Core.Commands.ListAll.LIST_ALL">
            <summary>
            Test ID for Command.
            </summary>
            
        </member>
        <member name="F:Nexus.Core.Commands.ListAll.DATA">
            <summary>
            Fake name for test data.
            </summary>
            
        </member>
        <member name="T:Nexus.Core.Commands.ObjectByKey">
            <summary>
            Sample model command that adds a result object into the context 
            if the correct key is passed.
            </summary>
        </member>
        <member name="T:Nexus.Core.CatalogBaseTest">
            <summary>
            Provide base SetUp method and convenience methods 
            for tests that use a IRequestCatalog.
            </summary>
            
        </member>
        <member name="F:Nexus.Core.CatalogBaseTest.catalog">
            <summary>
            Catalog instance that tests can use.
            </summary>
        </member>
        <member name="M:Nexus.Core.CatalogBaseTest.SetUp">
            <summary>
            Setup catalog between tests.
            </summary>
            
        </member>
        <member name="M:Nexus.Core.CatalogBaseTest.AssertSetUp">
            <summary>
            Exercise Setup method.
            </summary>
            
        </member>
        <member name="M:Nexus.Core.CatalogBaseTest.ContainsKeys(Agility.Core.IContext,System.String[])">
            <summary>
            Determine if the context contains each key in keys.
            </summary>
            <param name="context">Context to process</param>
            <param name="keys">Keys to verify</param>
            <returns>True if contact contains each key in keys</returns>
        </member>
        <member name="M:Nexus.Core.CatalogBaseTest.ContainsCriteriaKeys(Nexus.Core.IRequestContext,System.String[])">
            <summary>
            Determine if the Criteria for context contains each key in keys.
            </summary>
            <param name="context">Context to process</param>
            <param name="keys">Keys to verify</param>
            <returns>True if Criteria for contact contains each key in keys</returns>
        </member>
        <member name="M:Nexus.Core.CatalogBaseTest.AssertNoFault(Nexus.Core.IRequestContext)">
            <summary>
            Convenience method to confirm that no Exception was caught.
            </summary>
            <param name="context">Context under test</param>
            
        </member>
        <member name="M:Nexus.Core.CatalogBaseTest.AssertNominal(Nexus.Core.IRequestContext)">
            <summary>
            Convenience method to confirm 
            that there are no alerts or fault.
            </summary>
            <param name="context">Context under test</param>
            
        </member>
        <member name="M:Nexus.Core.CatalogBaseTest.AssertNominal(Nexus.Core.Helpers.IViewHelper)">
            <summary>
            Convenience method to confirm 
            that there are no alerts or fault.
            </summary>
            <param name="helper">Helper under test</param>
            
        </member>
        <member name="M:Nexus.Core.CatalogBaseTest.AssertKey(System.Collections.IDictionary,System.String,System.String)">
            <summary>
            Confirm that the value is stored in the context under the key.
            </summary>
            <param name="context">The context to check</param>
            <param name="key">The key</param>
            <param name="value">The value</param>
        </member>
        <member name="M:Nexus.Core.CatalogBaseTest.AssertKeys(Nexus.Core.IRequestContext,System.String[])">
            <summary>
            Confirm that the given context contains the given keys.
            </summary>
            <param name="context">The context to check</param>
            <param name="keys">The keys to check</param>
        </member>
        <member name="M:Nexus.Core.CatalogBaseTest.AssertListKeys(Nexus.Core.IRequestContext,System.String[])">
            <summary>
            Confirm that the context contains the keys, 
            that each key represents an non-null IList, 
            and that each IList is not empty.
            </summary>
            <param name="context">The context to check</param>
            <param name="keys">The list keys</param>
        </member>
        <member name="M:Nexus.Core.CatalogBaseTest.AssertList(System.String)">
            <summary>
            Call AssertList(string,int) with no minimum.
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Nexus.Core.CatalogBaseTest.AssertList(System.String,System.Int32)">
            <summary>
            Execute the Command for the given id, 
            and confirm that the return state is Nominal, 
            has an Outcome, 
            that the Outcome is an non-null IList, 
            and that the IList containes at list minCount items.
            </summary>
            <param name="id">The List Command to check</param>
            <param name="minCount">The minimum number of items</param>
        </member>
        <member name="M:Nexus.Core.CatalogBaseTest.Populate(System.Collections.IDictionary)">
            <summary>
            Virtual method for populating a context 
            for use with other routine tests.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Nexus.Core.CatalogBaseTest.AssertInsertDelete(System.String,System.String,System.String,System.String)">
            <summary>
            Insert and then delete a new record, 
            calling the Populate method to fill the context with the appropriate values.
            </summary>
            <param name="insertId">The "save" command name</param>
            <param name="keyId">The name of the primary key field</param>
            <param name="keyValue">The primary key value initially set by Populate</param>
            <param name="deleteId">The "delete" command name</param>
        </member>
        <member name="M:Nexus.Core.CatalogBaseTest.AssertUpdate(System.String,System.String,System.String)">
            <summary>
            Update the given record (usually to the same values).
            </summary>
            <param name="updateId">The "save" command</param>
            <param name="keyId">The name of the primary key</param>
            <param name="keyValue">The value of the primary key</param>
        </member>
        <member name="T:Nexus.Core.CatalogTest">
            <summary>
            Exercise IRequestCatalog per [OVR-8].
            </summary>
            
        </member>
        <member name="M:Nexus.Core.CatalogTest.ExecuteRequest">
            <summary>
            A simple "list all" command should return nominal with an outcome. 
            </summary>
            
        </member>
        <member name="T:Nexus.Core.ObjectByKeyTest">
            <summary>
            Prove that a single object can be returned by Execute, without error.
            </summary>
        </member>
        <member name="T:Nexus.Core.RequestCommandTest">
            <summary>
            Exercise methods of standard IRequestCommand implementation [OVR-9].
            </summary>
            
        </member>
        <member name="M:Nexus.Core.RequestCommandTest.SetUp">
            <summary>
            Create a default command between test runs. 
            </summary>
            
        </member>
        <member name="M:Nexus.Core.RequestCommandTest.NewRequestContext">
            <summary>
            A NewContext is not null.
            </summary>
            
        </member>
        <member name="M:Nexus.Core.RequestCommandTest.RequestExecute">
            <summary>
             A successful command returns a nominal result.
            </summary>
            
        </member>
        <member name="T:Nexus.Core.RequestContextTest">
            <summary>
            Exercise IRequestContext per [OVR-7].
            </summary>
            
        </member>
        <member name="M:Nexus.Core.RequestContextTest.SetUp">
            <summary>
            Initialize private fields.
            </summary>
            
        </member>
        <member name="M:Nexus.Core.RequestContextTest.IsNominal_Alert">
            <summary>
            A IRequestContext is not nominal if an alert is added. 
            </summary>
            
        </member>
        <member name="M:Nexus.Core.RequestContextTest.IsNominal_Fault">
            <summary>
            A IRequestContext is not nominal if an Exception is set.
            </summary>
            
        </member>
        <member name="M:Nexus.Core.RequestContextTest.IsNominal_Errors_and_Fault">
            <summary>
            A IRequestContext is not nominal if multiple errors are added 
            and an Exception is set.
            </summary>
            
        </member>
        <member name="M:Nexus.Core.RequestContextTest.HasOutcome">
            <summary>
            If data is set to the Outcome property, HasOutcome is true.
            </summary>
            
        </member>
    </members>
</doc>
