<!--

 Copyright 2004-2005 The Apache Software Foundation.
 
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 
      http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.

 $Id$

-->


<project name="Tiles Core Library" default="library" basedir=".">


  <!-- ===================== Initialize Property Values ==================== -->


  <!-- Initialize property values -->
  <property file="build.properties"/>
  <property file="../build.properties"/>
  <property file="${user.home}/build.properties"/>


  <!-- Build Defaults -->
  <property name="build.home"              value="${basedir}/target"/>
  <property name="dist.home"               value="${basedir}/dist"/>
  <property name="lib.home"                value="${basedir}/lib"/>
  <property name="project.name"            value="Tiles Core Library"/>
  <property name="project.package"         value="org.apache.tiles"/>
  <property name="project.version"         value="0.2-dev"/>


  <!-- Dependency Defaults -->
  <property name="maven.repo"              value="http://www.ibiblio.org/maven"/>

  <!-- Dependency library defaults -->
  <property name="junit.jar"        value="${junit.home}/junit.jar"/>


  <!-- Compile Defaults -->
  <property name="compile.debug"           value="true"/>
  <property name="compile.deprecation"     value="false"/>
  <property name="compile.optimize"        value="true"/>


  <!-- Unit Test Defaults -->
  <property name="test.haltonerror"        value="true"/>
  <property name="test.haltonfailure"      value="true"/>
  <property name="test.runner"             value="junit.textui.TestRunner"/>


  <!-- External Dependency Declarations -->
  <fileset             id="external.libs"
                      dir="${lib.home}">
    <include         name="*.jar"/>
    <exclude         name="junit.jar"/>
  </fileset>
  <path                id="external.path">
    <fileset        refid="external.libs"/>
  </path>

  <!-- Compile Classpath -->
  <path                id="compile.classpath">
    <path           refid="external.path"/>
    <pathelement location="${build.home}/classes"/>
  </path>


  <!-- Test Classpath -->
  <path                id="test.classpath">
    <path           refid="external.path"/>
    <pathelement location="${lib.home}/junit.jar"/>
    <pathelement location="${build.home}/classes"/>
    <pathelement location="${build.home}/test-classes"/>
  </path>


  <!-- ==================== Maintenance Targets ============================ -->


  <target     name="clean"
       description="Clean all build directories">
    <delete    dir="${build.home}"/>
    <delete    dir="${dist.home}"/>
  </target>


  <target     name="init">
    <echo  message="---------- ${project.name} ${project.version} -----------"/>
    <filter  token="name"     value="${project.name}"/>
    <filter  token="package"  value="${project.package}"/>
    <filter  token="version"  value="${project.version}"/>
  </target>


  <target     name="prepare" depends="init">
    <mkdir     dir="${build.home}"/>
    <mkdir     dir="${build.home}/classes"/>
    <mkdir     dir="${build.home}/classes/META-INF"/>
    <mkdir     dir="${build.home}/conf"/>
    <mkdir     dir="${build.home}/lib"/>
    <mkdir     dir="${dist.home}"/>
    <mkdir     dir="${dist.home}/docs"/>
    <mkdir     dir="${dist.home}/docs/api"/>
  </target>


  <target     name="static" depends="prepare">
    <tstamp/>
    <copy    todir="${build.home}/conf"
         filtering="on">
      <fileset dir="src/conf"
          includes="*.MF"/>
    </copy>
    <copy    todir="${build.home}/classes/META-INF">
      <fileset dir="src/conf"
          includes="*.tld"/>
    </copy>
  </target>


  <!-- =================== Compile Library Components ====================== -->


  <target         name="compile" depends="static"
           description="Compile core library">

    <!-- Compile Java Sources -->
    <javac      srcdir="src/java"
               destdir="${build.home}/classes"
                 debug="${compile.debug}"
           deprecation="${compile.deprecation}"
              optimize="${compile.optimize}">
      <classpath refid="compile.classpath" />
    </javac>

    <!-- Copy non-Java Sources -->
    <copy        todir="${build.home}/classes">
      <fileset     dir="src/java">
        <exclude  name="**/*.java"/>
      </fileset>
    </copy>

    <!-- Copy DTDs into appropriate resources directory -->
    <mkdir         dir="${build.home}/classes/org/apache/tiles/resources"/>
    <copy        todir="${build.home}/classes/org/apache/tiles/resources">
      <fileset     dir="src/conf"
              includes="*.dtd"/>
    </copy>

    <!-- Copy license and notice files -->
    <copy       tofile="${build.home}/classes/META-INF/LICENSE.txt"
                  file="LICENSE.txt"/>
    <copy       tofile="${build.home}/classes/META-INF/NOTICE.txt"
                  file="NOTICE.txt"/>

  </target>


  <target         name="library" depends="compile"
           description="Package core library">

    <jar       jarfile="${build.home}/lib/tiles-core.jar"
               basedir="${build.home}/classes"
              manifest="${build.home}/conf/MANIFEST.MF"/>
  </target>


  <!-- ===================== Generate Documentation ======================== -->


  <target         name="docs" depends="library"
           description="Create generated documentation and JavaDocs">

    <javadoc
            sourcepath="src/java"
               destdir="${dist.home}/docs/api"
                author="false"
               private="true"
               version="true"
          packagenames="org.apache.tiles.*"
           windowtitle="${project.name} (Version ${project.version})"
              doctitle="${project.name} (Version ${project.version})"
                bottom="Copyright &#169; 2004-2005 - The Apache Software Foundation">
      <classpath refid="compile.classpath"/>
    </javadoc>

  </target>


  <!-- ==================== Create Binary Distribution ==================== -->


  <target name="dist" depends="docs"
   description="Create binary distribution">

    <mkdir     dir="${dist.home}"/>
    <copy    todir="${dist.home}">
      <fileset dir="${basedir}" includes="*.txt build.*"
                                excludes="build.properties"/>
    </copy>

    <mkdir     dir="${dist.home}/conf"/>
    <copy    todir="${dist.home}/conf">
      <fileset dir="src/conf" includes="*.tld"/>
      <fileset dir="src/conf" includes="*.dtd"/>
    </copy>

    <mkdir     dir="${dist.home}/lib"/>
    <copy    todir="${dist.home}/lib">
      <fileset dir="${build.home}/lib" includes="*.jar"/>
    </copy>

    <mkdir     dir="${dist.home}/src"/>
    <copy    todir="${dist.home}/src">
      <fileset dir="src" excludes="**/.svn/**"/>
    </copy>

  </target>


  <!-- ========================= Unit Tests ================================ -->


  <target         name="test:compile" depends="library"
           description="Compile library unit tests">

    <mkdir         dir="${build.home}/test-classes"/>

    <!-- Compile Java Sources -->
    <javac      srcdir="src/test"
               destdir="${build.home}/test-classes"
                 debug="${compile.debug}"
           deprecation="${compile.deprecation}"
              optimize="${compile.optimize}">
      <classpath refid="test.classpath" />
    </javac>

    <!-- Copy non-Java Sources -->
    <copy        todir="${build.home}/test-classes">
      <fileset     dir="src/test">
        <exclude  name="**/*.java"/>
      </fileset>
    </copy>

  </target>


  <target         name="test" depends="test:compile"
           description="Execute library unit tests">
    <junit        fork="yes"
           haltonerror="${test.haltonerror}"
         haltonfailure="${test.haltonfailure}"
          printSummary="no">

      <classpath refid="test.classpath"/>
      <formatter  type="plain"
               usefile="false"/>
      <batchtest  fork="yes">
        <fileset   dir="${build.home}/test-classes"
              includes="org/apache/tiles/**/Test*.class"/>
      </batchtest>

    </junit>

  </target>


  <!-- ===================== Dependency Targets ============================ -->


  <target        name="download-dependencies"
          description="Download freely available dependencies">

    <mkdir        dir="${lib.home}"/>

    <get         dest="${lib.home}/commons-beanutils.jar"
         ignoreerrors="true"
                  src="${maven.repo}/commons-beanutils/jars/commons-beanutils-1.7.0.jar"
         usetimestamp="true"/>

    <get         dest="${lib.home}/commons-digester.jar"
         ignoreerrors="true"
                  src="${maven.repo}/commons-digester/jars/commons-digester-1.7.jar"
         usetimestamp="true"/>

    <get         dest="${lib.home}/commons-logging.jar"
         ignoreerrors="true"
                  src="${maven.repo}/commons-logging/jars/commons-logging-1.0.4.jar"
         usetimestamp="true"/>

    <get         dest="${lib.home}/junit.jar"
         ignoreerrors="true"
                  src="${maven.repo}/junit/jars/junit-3.8.1.jar"
         usetimestamp="true"/>

    <get         dest="${lib.home}/servlet-api.jar"
         ignoreerrors="true"
                  src="${maven.repo}/servletapi/jars/servletapi-2.3.jar"
         usetimestamp="true"/>

  </target>


</project>
