<!DOCTYPE xwork PUBLIC "-//OpenSymphony Group//XWork 1.0//EN"
  "http://www.opensymphony.com/xwork/xwork-1.0.dtd">

<!-- Generated from /pageflow/loginexample/start/Controller.java. -->
<xwork>
    <package name="/pageflow/loginexample/start" namespace="/pageflow/loginexample/start">
        <result-types>
            <result-type name="pathResult" class="org.apache.ti.pageflow.xwork.PageFlowPathResult"/>
            <result-type name="navigateToPageResult" class="org.apache.ti.pageflow.xwork.NavigateToPageResult"/>
            <result-type name="navigateToActionResult" class="org.apache.ti.pageflow.xwork.NavigateToActionResult"/>
            <result-type name="returnActionResult" class="org.apache.ti.pageflow.xwork.ReturnActionResult"/>
        </result-types>

        <!--
            This is (hopefully) temporary.  It's a dummy action that only contains metadata
            (parameters) about this module.
        -->
        <action name="_moduleMetadata">
            <param name="controllerClassName">pageflow.loginexample.start.Controller</param>
        </action>

        <!-- A "begin" action with forward to "begin.jsp" is generated implicitly. -->
        <action name="begin" class="org.apache.ti.pageflow.xwork.PageFlowAction">
            <param name="simpleAction">true</param>
            <param name="defaultForward">success</param>
            <result name="success" type="pathResult">
                <param name="location">begin.jsp</param>
            </result>
        </action>

        <!-- Generated from simple action "goProtectedFlow". -->
        <action name="goProtectedFlow" class="org.apache.ti.pageflow.xwork.PageFlowAction">
            <param name="simpleAction">true</param>
            <param name="defaultForward">success</param>
            <param name="loginRequired">true</param>
            <result name="success" type="pathResult">
                <param name="location">/pageflow/loginexample/protectedflow/Controller.jpf</param>
            </result>
        </action>

        <!-- Generated from simple action "protectedFlowDone". -->
        <action name="protectedFlowDone" class="org.apache.ti.pageflow.xwork.PageFlowAction">
            <param name="simpleAction">true</param>
            <param name="defaultForward">success</param>
            <result name="success" type="navigateToPageResult">
                <param name="previousPageIndex">0</param>
            </result>
        </action>

        <!--
            Generated from inherited simple action "loginCancel", in pageflow.loginexample.BaseFlow.
        -->
        <action name="loginCancel" class="org.apache.ti.pageflow.xwork.PageFlowAction">
            <param name="simpleAction">true</param>
            <param name="defaultForward">success</param>
            <result name="success" type="navigateToPageResult">
                <param name="previousPageIndex">0</param>
            </result>
        </action>

        <!--
            Generated from inherited simple action "loginSuccess", in pageflow.loginexample.BaseFlow.
        -->
        <action name="loginSuccess" class="org.apache.ti.pageflow.xwork.PageFlowAction">
            <param name="simpleAction">true</param>
            <param name="defaultForward">success</param>
            <result name="success" type="navigateToActionResult"/>
        </action>

        <!-- Generated from inherited action method "logout", in pageflow.loginexample.BaseFlow. -->
        <action name="logout" class="org.apache.ti.pageflow.xwork.PageFlowAction">
            <result name="success" type="navigateToPageResult">
                <param name="previousPageIndex">0</param>
            </result>
        </action>

        <!--
            Generated from an inherited @ti.handleException annotation for
            NotLoggedInException.class, in pageflow.loginexample.BaseFlow.
        -->
        <action name="org.apache.ti.pageflow.NotLoggedInException" class="org.apache.ti.pageflow.xwork.PageFlowExceptionHandler">
            <result name="success" type="pathResult">
                <param name="location">/pageflow/loginexample/loginflow/Controller.jpf</param>
            </result>
        </action>


    </package>
</xwork>
